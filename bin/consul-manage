#!/bin/bash
set -eo pipefail

#
# Update the -advertise address based on the interface that ContainerPilot has
# been told to listen on.
#
preStart() {
    cp -f /etc/consul/consul.hcl.orig /etc/consul/consul.hcl

    _log "Updating consul advertise address to ${CONTAINERPILOT_CONSUL_AGENT_IP}"
    sed -i "s/CONTAINERPILOT_CONSUL_AGENT_IP/${CONTAINERPILOT_CONSUL_AGENT_IP}/" /etc/consul/consul.hcl

    [ -n "${CONSUL_DNS}" ] || CONSUL_DNS="$(grep ^nameserver /etc/resolv.conf | grep -oE '[0-9\.]+' | tr [:space:] ,)8.8.8.8,8.8.4.4"
    _log "Updating consul DNS to ${CONSUL_DNS}"
    sed -i "s/CONSUL_DNS/$(echo ${CONSUL_DNS} | sed -e 's/,/","/g' -e 's/^/"/' -e 's/$/"/')/" /etc/consul/consul.hcl

    if [ -n "$CONSUL_DATACENTER_NAME" ]; then
        _log "Updating consul datacenter name (specified: '${CONSUL_DATACENTER_NAME}' )"
        sed -i "s/CONSUL_DATACENTER_NAME/${CONSUL_DATACENTER_NAME}/" /etc/consul/consul.hcl
    elif [ -f "/native/usr/sbin/mdata-get" ]; then
        DETECTED_DATACENTER_NAME=$(/native/usr/sbin/mdata-get sdc:datacenter_name)
        _log "Updating consul datacenter name (detected from Triton: '${DETECTED_DATACENTER_NAME}')"
        sed -i "s/CONSUL_DATACENTER_NAME/${DETECTED_DATACENTER_NAME}/" /etc/consul/consul.hcl
    elif [ -n "$AWS_REGION" ]; then
        DETECTED_DATACENTER_NAME="$AWS_REGION"
        _log "Updating consul datacenter name (detected from AWS_REGION: '${DETECTED_DATACENTER_NAME}')"
        sed -i "s/CONSUL_DATACENTER_NAME/${DETECTED_DATACENTER_NAME}/" /etc/consul/consul.hcl
    elif curl --connect-timeout 3 -s -o /dev/null --fail http://169.254.169.254/latest/meta-data/placement/availability-zone; then
        DETECTED_DATACENTER_NAME="$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/[a-z]$//')"
        _log "Updating consul datacenter name (detected from AWS EC2: '${DETECTED_DATACENTER_NAME}')"
        sed -i "s/CONSUL_DATACENTER_NAME/${DETECTED_DATACENTER_NAME}/" /etc/consul/consul.hcl
    elif curl --connect-timeout 3 -s -o /dev/null --fail -H Metadata:true 'http://169.254.169.254/metadata/instance?api-version=2017-04-02'; then
        DETECTED_DATACENTER_NAME="$(curl -s -H Metadata:true 'http://169.254.169.254/metadata/instance?api-version=2017-04-02' | jq -r .compute.location)"
        _log "Updating consul datacenter name (detected from Azure: '${DETECTED_DATACENTER_NAME}')"
        sed -i "s/CONSUL_DATACENTER_NAME/${DETECTED_DATACENTER_NAME}/" /etc/consul/consul.hcl
    else
        _log "Updating consul datacenter name (default: 'dc1')"
        sed -i "s/CONSUL_DATACENTER_NAME/dc1/" /etc/consul/consul.hcl
    fi

    # Ensure local hostname is set to target IP address, this may not be present, for example, on AWS Fargate
    if ! grep -q $(hostname) /etc/hosts; then
        _log "Adding missing local hostname $(hostname) to /etc/hosts pointing to ${CONTAINERPILOT_CONSUL_AGENT_IP}"
        echo "${CONTAINERPILOT_CONSUL_AGENT_IP} $(hostname)" >> /etc/hosts
    fi
}

health() {
    test "$(curl -s http://${CONSUL:-consul}:8500/v1/health/node/$(hostname) | jq -r .[].Status | uniq)" == "passing"
    RESULT=$?
    echo $RESULT > /var/run/node-healthcheck
    exit $RESULT
}

# Check for passing service(s). The service names are the arguments to the function.
# Exits 0 for all passing.
# Exits non-zero if no services are given to check.
check() {
    if [ $# = 0 ]; then
        exit 1
    fi

    for SERVICE in $@; do
        if [[ ! "$(curl -s http://${CONSUL:-consul}:8500/v1/health/checks/${SERVICE} | jq -r .[].Status | uniq)" =~ "passing" ]]; then
            exit 2
        fi
    done

    exit 0
}

_log() {
    echo "    $(date -u '+%Y-%m-%d %H:%M:%S') containerpilot: $@"
}

# ---------------------------------------------------
# parse arguments

# Get function list
funcs=($(declare -F -p | cut -d " " -f 3))

until
    if [ ! -z "$1" ]; then
        # check if the first arg is a function in this file, or use a default
        if [[ " ${funcs[@]} " =~ " $1 " ]]; then
            cmd=$1
            shift 1
        fi

        $cmd "$@"
        if [ $? == 127 ]; then
            help
        fi

        exit
    else
        help
    fi
do
    echo
done
